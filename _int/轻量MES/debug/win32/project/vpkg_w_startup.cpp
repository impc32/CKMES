
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

CVolRuntimeClass* gGetStartupRuntimeClass ()
{
    return VOL_RUNTIME_CLASS (rg_volcano_app::rg_startup_class);
}
int gCallStartupMethod ()
{
    if (IsDebuggerPresent () == FALSE)
    {
        try
        {
            return ((rg_volcano_app::rg_startup_class&)g_objVolApp.GetVolApp ()).rg_startup_method ();
        }
        catch (CVolException& e)
        {
            CVolString str;
            str.Format (_T ("俘获到异常,代码值为: %d, 描述为: %s"), e.m_nCode, e.m_strDesc.GetText ());
            ::MessageBox (NULL, str.GetText (), _T ("运行时异常"), (MB_OK | MB_ICONERROR));
        }
        catch (...)
        {
            ::MessageBox (NULL, _T ("程序在运行时抛出了未被管理的异常"), _T ("运行时异常"), (MB_OK | MB_ICONERROR));
        }
        exit (-1);
        return 0;
    }
    else
    {
        return ((rg_volcano_app::rg_startup_class&)g_objVolApp.GetVolApp ()).rg_startup_method ();
    }
}
#ifndef _VOL_DISABLE_STANDARD_STARTUP
#if (defined (_CONSOLE) || defined (_VOL_CONSOLE_EXE))
int _tmain (int argc, _TCHAR* argv [])
{
    setlocale (LC_CTYPE, "");
    g_objVolApp.init (GetModuleHandle (NULL), argc, (const TCHAR**)argv, gGetStartupRuntimeClass ());
    const int nResult = gCallStartupMethod ();
    g_objVolApp.OnBeforeExit ();
    return nResult;
}
#elif (defined (_USRDLL) || defined (_VOL_DLL))
BOOL APIENTRY DllMain (HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)
{
    if  (ul_reason_for_call == DLL_PROCESS_ATTACH)
    {
        g_objVolApp.init (hModule, 0, NULL, gGetStartupRuntimeClass ());
        if (gCallStartupMethod () == 0)
            return FALSE;
    }
    CVolUserApp& objUserApp = g_objVolApp.GetVolApp ();
    const BOOL_P blpIsDllApp = IS_VOL_INSTANCE_OF (objUserApp, rg_volcano_base::rg_DongTaiKuChengXuLei);
    const BOOL blResult = (blpIsDllApp ? ((rg_volcano_base::rg_DongTaiKuChengXuLei&)objUserApp).rg_RuKouTongZhi ((INT_P)hModule, (INT)ul_reason_for_call, (INT_P)lpReserved) : TRUE);
    if (ul_reason_for_call == DLL_PROCESS_DETACH)
    {
        if (blpIsDllApp)
            ((rg_volcano_base::rg_DongTaiKuChengXuLei&)objUserApp).rg_JiangBeiXieZai ();
        g_objVolApp.OnBeforeExit ();
    }
    return blResult;
}
#else
int APIENTRY _tWinMain (HINSTANCE hInstance, HINSTANCE hPrevInstance, LPTSTR lpCmdLine, int nCmdShow)
{
    g_objVolApp.init (hInstance, __argc, (const TCHAR**)__targv, gGetStartupRuntimeClass ());
    if (gCallStartupMethod () == 0)
    {
        g_objVolApp.OnBeforeExit ();
        return -1;
    }
    if (IsCurrentProcessHasTopWindow (NULL))
    {
        rg_volcano_base::rg_ChuangKouChengXuLei* pobjWinApp;
        if (IS_VOL_INSTANCE_OF (g_objVolApp.GetVolApp (), rg_volcano_base::rg_ChuangKouChengXuLei))
            pobjWinApp = (rg_volcano_base::rg_ChuangKouChengXuLei*)&g_objVolApp.GetVolApp ();
        else
            pobjWinApp = NULL;
        MSG msg;
        while (GetMessage (&msg, NULL, 0, 0))
        {
            if (pobjWinApp == NULL ||
                    pobjWinApp->rg_XiaoXiGuoLu ((INT_P)msg.hwnd, (INT)msg.message,
                        (INT_P)msg.wParam, (INT_P)msg.lParam, (INT_P)&msg))
            {
                if (CVolAppInstance::sVolPreFilterInputMessage (&msg) == FALSE)
                {
                    TranslateMessage (&msg);
                    DispatchMessage (&msg);
                }
            }
        }
        if (pobjWinApp != NULL)
            pobjWinApp->rg_JiJiangTuiChu ();
    }
    g_objVolApp.OnBeforeExit ();
    return 0;
}
#endif
#endif

namespace rg_volcano_base
{
const CVolRuntimeClass** rg_ChengXuLei::GetSpecialUserRuntimeClasses  () const
{
    static const CVolRuntimeClass* cs_aRuntimeClasses [] =
    {
        VOL_RUNTIME_CLASS (rg_ZiJieLei),
        VOL_RUNTIME_CLASS (rg_DuanZhengShuLei),
        VOL_RUNTIME_CLASS (rg_ZiFuLei),
        VOL_RUNTIME_CLASS (rg_ZhengShuLei),
        VOL_RUNTIME_CLASS (rg_BianZhengShuLei),
        VOL_RUNTIME_CLASS (rg_ChangZhengShuLei),
        VOL_RUNTIME_CLASS (rg_ChanJingDuXiaoShuLei),
        VOL_RUNTIME_CLASS (rg_XiaoShuLei),
        VOL_RUNTIME_CLASS (rg_LuoJiXingLei)
    };
    COMPILE_TIME_ASSERT (SUCT_PKG_SBYTE == 0 && SUCT_PKG_SHORT == 1 && SUCT_PKG_WCHAR == 2 && SUCT_PKG_INT == 3 &&
            SUCT_PKG_VINT == 4 && SUCT_PKG_LONG == 5 && SUCT_PKG_FLOAT == 6 && SUCT_PKG_DOUBLE == 7 && SUCT_PKG_BOOL == 8 && SUCT_PKG_BOOL + 1 == _NUM_SPEC_USER_CLASS_TYPES &&
            _NUM_SPEC_USER_CLASS_TYPES == NUM_ELEMENTS_OF (cs_aRuntimeClasses));
    return cs_aRuntimeClasses;
}

BOOL rg_ChuangKouChengXuLei::rg_XiaoXiGuoLu (INT rg_ChuangKouGouBing2, INT rg_XiaoXiZhi, INT rg_XiaoXiCanShu, INT rg_XiaoXiCanShu1, INT rg_XiaoXiDeZhi)
{
    return (TRUE);
}

BOOL rg_ChuangKouChengXuLei::rg_KongXian1 (INT rg_YiKongXianShiJian)
{
    return (FALSE);
}

void rg_ChuangKouChengXuLei::rg_JiJiangTuiChu ()
{
}

BOOL rg_DongTaiKuChengXuLei::rg_RuKouTongZhi (INT rg_MoKuaiGouBing, INT rg_DiaoYongYuanYin, INT rg_BaoLiuZhiZhen)
{
    return (TRUE);
}

void rg_DongTaiKuChengXuLei::rg_JiangBeiXieZai ()
{
}

}
