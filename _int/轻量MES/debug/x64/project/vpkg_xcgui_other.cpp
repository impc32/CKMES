
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

namespace rg_xc_gui
{

rg_XuanCaiHuiTu::rg_XuanCaiHuiTu ()
{
    _VolObjectInitMembers ();
}

void rg_XuanCaiHuiTu::_VolObjectInitMembers ()
{
    _OnInitExtra ();
}

BOOL rg_XuanCaiHuiTu::_IsSelfEqual (const rg_XuanCaiHuiTu& objCompare) const
{
    if (_IsSelfEqualExtra (objCompare) == FALSE)
        return FALSE;
    return TRUE;
}

void rg_XuanCaiHuiTu::_CopySelfFrom (const rg_XuanCaiHuiTu& objCopyFrom)
{
    _CopySelfFromExtra (objCopyFrom);
}

rg_XuanCaiHuiTu::~rg_XuanCaiHuiTu ()
{
    OnBeforeObjectCleanup ();
    _OnCleanupExtra ();
}
void rg_XuanCaiHuiTu::SetRefObject (CRefObject* pRefObject)
{
    ASSERT_R_DATA_OR_NULL (pRefObject);
    if (pRefObject != NULL)  pRefObject->AddRef ();
    if (m_pRefObject != NULL)  m_pRefObject->Release ();
    m_pRefObject = pRefObject;
}
void rg_XuanCaiHuiTu::TakeOverNewRefObject (CRefObject* pNewRefObject)
{
    ASSERT (pNewRefObject != m_pRefObject);
    ASSERT_R_DATA_OR_NULL (pNewRefObject);
    if (m_pRefObject != NULL)  m_pRefObject->Release ();
    m_pRefObject = pNewRefObject;
}

BOOL CALLBACK xcklei::rg_XuanCai_ChuShiHua (BOOL bD2D)
{
    CVolString rg_ShuChu = _T ("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━  \r\n封装 : 易团雪-->炫彩问答服务群-->特惠价66永久服务\r\n版本 : DLL:3.3.8.2-24.1.29->模块 : 2024.1.29\r\n炫彩论坛 :bbs.xcgui.com-->炫彩QQ群3:2283812      \r\n资源商场 :mall.xcgui.com-->私人企鹅:283279437\r\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
    if (rg_volcano_base::rg_ChengXuDiaoShiLei::rg_ShiFouWeiDiaoShiBan () == TRUE)
    {
        _DEBUG_STATMENT (DebugTrace (FALSE, 0, 0, _T ("S"), rg_ShuChu.GetText ()));
    }
    return XInitXCGUI (bD2D);
}

BOOL rg_XuanCaiKeSheJiLei::rg_ChuangJian32 (INT64 rg_FuGouBing46, INT64 rg_FuJiaChuangKou12)
{
    CVolString rg_SheJiNeiRong;
    rg_volcano_base::rg_WenBenShuZuLei rg_WenBenShuZu;
    CVolString rg_ChuangKouBuJuWenJian;
    INT rg_index2 = 0;
    INT rg_count = 0;
    rg_SheJiNeiRong = VolGetDesignContent ();
    SplitSubStrings (rg_SheJiNeiRong.GetText (), rg_WenBenShuZu.data (), _CT (",").GetText (), TRUE, TRUE);
    rg_count = (INT)rg_WenBenShuZu.data ().GetCount ();
    if (0 == rg_count)
    {
        _DEBUG_STATMENT (DebugTrace (FALSE, 0, 0, _T ("S"), _T ("设计内容错误")));
        return (FALSE);
    }
    rg_ChuangKouBuJuWenJian = CVolString (rg_WenBenShuZu.data ().GetAt (0));
    rg_WenBenShuZu.data ().RemoveAt (0, 1);
    rg_count = rg_count - 1;
    rg_ChuangKouBuJuWenJian.RemoveChars (0, 1);
    rg_ChuangKouBuJuWenJian.RemoveChar (((INT)rg_ChuangKouBuJuWenJian.GetLength () - 1), 1);
    HXCGUI hObj = XC_LoadLayout(rg_ChuangKouBuJuWenJian.GetText (),(HXCGUI)rg_FuGouBing46,(HWND)rg_FuJiaChuangKou12);
    if (!hObj){
      DebugTrace (FALSE, 0, 0, _T ("SSSpS"), L"加载布局文件失败=", rg_ChuangKouBuJuWenJian.GetText() ,  L"句柄 = ",hObj,L"请检查资源路径是否正确!");
     return 0; }
     vint addr = (vint)this + sizeof( rg_XuanCaiKeSheJiLei) ;
    for (rg_index2 = 0; rg_index2 < rg_count; rg_index2++)
    {
        CVolString rg_value75;
        if (0 != rg_index2){
        rg_value75 = CVolString (rg_WenBenShuZu.data ().GetAt (rg_index2));
           hObj = XC_GetObjectByName(rg_value75.GetText());
           if(!hObj){
            DebugTrace (FALSE, 0, 0, _T ("SSSp"), L"绑定变量失败 变量名=",  rg_value75.GetText(), L"句柄=", hObj);
            return 0; }
        }
        XC_OBJECT_TYPE xc_type = XObj_GetType (hObj);
        if(XC_ERROR==xc_type) return false;
        ((xcguibase*) addr)->set( (vint)hObj );
         ((widgetUI*) addr)->rg_ZiDongZhuCeShiJian();
        switch(xc_type){
        case  XC_ELE:  addr = addr + sizeof( rg_JiChuYuanSu ); break;
        case  XC_ELE_LAYOUT:   addr = addr + sizeof( rg_XuanCaiBuJu ); break;
        case  XC_BUTTON:    addr = addr + sizeof( xcann ); break;
        case XC_LISTBOX:  addr = addr + sizeof( rg_XuanCaiLieBiaoKuang ); break;
        case XC_LIST:  addr = addr + sizeof( rg_XuanCaiLieBiao ); break;
        case XC_SHAPE:  addr = addr + sizeof( rg_XingZhuangJiLei ); break;
        case XC_SHAPE_TEXT:  addr = addr + sizeof( rg_XingZhuangWenBen ); break;
        case XC_SHAPE_PICTURE:  addr = addr + sizeof( rg_XingZhuangTuPian ); break;
        case XC_SHAPE_RECT:  addr = addr + sizeof( rg_XingZhuangJuXing ); break;
        case XC_SHAPE_GROUPBOX:  addr = addr + sizeof( rg_XingZhuangZuKuang ); break;
        case XC_SHAPE_GIF:  addr = addr + sizeof( rg_XingZhuangGIF ); break;
        case XC_SHAPE_TABLE:  addr = addr + sizeof( rg_XingZhuangBiaoGe ); break;
        case XC_EDIT:  addr = addr + sizeof( rg_XuanCaiBianJiKuang ); break;
        case XC_TREE:  addr = addr + sizeof( rg_XuanCaiLieBiaoShu ); break;
        case XC_EDITOR:  addr = addr + sizeof( rg_XuanCaiDaiMaKuang ); break;
        case XC_PROGRESSBAR:   addr = addr + sizeof( rg_XuanCaiJinDuTiao ); break;
        case XC_SLIDERBAR:  addr = addr + sizeof( rg_XuanCaiHuaDongTiao ); break;
        case XC_SCROLLBAR:  addr = addr + sizeof( rg_XuanCaiGunDongTiao ); break;
        case XC_TABBAR:  addr = addr + sizeof( rg_XuanCaiTabTiao ); break;
        case XC_TOOLBAR:  addr = addr + sizeof( rg_XuanCaiGongJuTiao ); break;
        case XC_SCROLLVIEW:  addr = addr + sizeof( rg_XuanCaiGunDongShiTu ); break;
        case XC_DATETIME:  addr = addr + sizeof( rg_XuanCaiRiJiKuang ); break;
        case XC_MONTHCAL:  addr = addr + sizeof( rg_XuanCaiYueLiKuang ); break;
        case XC_PANE:  addr = addr + sizeof( rg_XuanCaiChuangGe ); break;
        case XC_PROPERTYGRID:  addr = addr + sizeof( rg_XuanCaiShuXingKuang ); break;
        case XC_MENU:  addr = addr + sizeof( rg_XuanCaiCaiChan ); break;
        case XC_MENUBAR:  addr = addr + sizeof( rg_XuanCaiCaiChanTiao ); break;
        case XC_COMBOBOX:  addr = addr + sizeof( rg_XuanCaiZuGeKuang ); break;
        case XC_LISTVIEW:  addr = addr + sizeof( rg_XuanCaiLieBiaoShiTu ); break;
        case  XC_LAYOUT_FRAME:   addr = addr + sizeof( rg_XuanCaiBuJuKuangJia ); break;
        case  XC_TEXTLINK:   addr = addr + sizeof( rg_XuanCaiWenBenLianJie ); break;
        case XC_WINDOW:  addr = addr + sizeof( XWnd ); break;
        case XC_FRAMEWND:   addr = addr + sizeof( rg_KuangJiaChuangKou ); break;
        case XC_MODALWINDOW:  addr = addr + sizeof( rg_MoTaiChuangKou ); break;
        default:   DebugTrace (FALSE, 0, 0, _T ("S"), "错误:未知类型");    return false;
        }
    }
    rg_ChuangJianWanCheng1 ();
    return (TRUE);
}

void rg_XuanCaiKeSheJiLei::rg_ChuangJianWanCheng1 ()
{
}

}
