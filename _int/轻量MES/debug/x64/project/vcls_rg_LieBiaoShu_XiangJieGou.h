
// Generated by Volcano Development Platform - http://www.voldp.com

#ifndef __VCLS_RG_XC_GUI_RG_LIEBIAOSHU_XIANGJIEGOU_H__
#define __VCLS_RG_XC_GUI_RG_LIEBIAOSHU_XIANGJIEGOU_H__

namespace rg_xc_gui
{

class rg_LieBiaoShu_XiangJieGou : public rg_volcano_base::rg_JieGouJiChuLei
{
    DECLARE_VOL_CLASS (rg_xc_gui, rg_LieBiaoShu_XiangJieGou)

public:
    typedef tree_item_ DATA_TYPE;
    rg_LieBiaoShu_XiangJieGou (DATA_TYPE& data) : rg_LieBiaoShu_XiangJieGou ()  { m_pData = &data; COPY_MEM (&m_data, &data, sizeof (DATA_TYPE)); }
    inline_ void _OnInitExtra ()  { m_pData = NULL; ZERO_MEM (&m_data, sizeof (DATA_TYPE)); }
    inline_ void _CopySelfFromExtra (const rg_LieBiaoShu_XiangJieGou& objCopyFrom)  { m_pData = NULL; COPY_MEM (&m_data, objCopyFrom.pdata (), sizeof (DATA_TYPE)); }
    inline_ BOOL _IsSelfEqualExtra (const rg_LieBiaoShu_XiangJieGou& objCompare) const  { return (memcmp (pdata (), objCompare.pdata (), sizeof (DATA_TYPE)) == 0); }
    inline_ rg_LieBiaoShu_XiangJieGou& Copy (DATA_TYPE& data)  { m_pData = NULL; COPY_MEM (&m_data, &data, sizeof (DATA_TYPE)); return *this; }
    inline_ DATA_TYPE* pdata ()  { return (m_pData != NULL ? m_pData : &m_data); }
    inline_ const DATA_TYPE* pdata () const  { return (m_pData != NULL ? m_pData : &m_data); }
    inline_ INT get_size () const  { return sizeof (DATA_TYPE); }
    inline_ CVolMem& get_bin (CVolMem& memBuf)  { memBuf.CopyFrom (pdata (), sizeof (DATA_TYPE)); return memBuf; }
    private:  DATA_TYPE* m_pData; DATA_TYPE m_data;

public:
    rg_LieBiaoShu_XiangJieGou ();
    void _VolObjectInitMembers ();
};

}

#endif  //__VCLS_RG_XC_GUI_RG_LIEBIAOSHU_XIANGJIEGOU_H__
