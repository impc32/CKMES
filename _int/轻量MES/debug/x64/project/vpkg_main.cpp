
// Generated by Volcano Development Platform - http://www.voldp.com

#include "stdafx.h"
#include "vol_user_app.h"

namespace rg_volcano_app
{

static void _sOnClassesStaticInit ()
{
    assert ((CVolBaseDataType::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolRefObject::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolUserApp::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolBaseStream::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolBaseInputStream::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolBaseOutputStream::CVolObject::sGetRuntimeClass () != NULL));
    assert ((CVolString::CVolObject::sGetRuntimeClass () != NULL));
}

BOOL rg_startup_class::_IsSelfEqual (const rg_startup_class& objCompare) const
{
    if (rg_ZhuChuangKou != objCompare.rg_ZhuChuangKou)  return FALSE;
    return TRUE;
}

void rg_startup_class::_CopySelfFrom (const rg_startup_class& objCopyFrom)
{
    rg_ZhuChuangKou = objCopyFrom.rg_ZhuChuangKou;
}

void rg_startup_class::LoadFromStream (CVolBaseInputStream& stream)
{
    if (stream.IsFoundError ())  return;
    BaseClass::LoadFromStream (stream);
    rg_ZhuChuangKou.LoadFromStream (stream);
}

void rg_startup_class::SaveIntoStream (CVolBaseOutputStream& stream)
{
    if (stream.IsFoundError ())  return;
    BaseClass::SaveIntoStream (stream);
    rg_ZhuChuangKou.SaveIntoStream (stream);
}

INT rg_startup_class::rg_startup_method ()
{
    _sOnClassesStaticInit ();
    rg_xc_gui::xcklei::rg_XuanCai_ChuShiHua (FALSE);
    rg_ZhuChuangKou.rg_ChuangJian32 (0, 0);
    XRunXCGUI ();
    XExitXCGUI ();
    return (0);
}

void rg_my_main_window::rg_ChuangJianWanCheng1 ()
{
}

CVolString rg_my_main_window::VolGetDesignContent ()
{
    return (_T ("\"main.xml\","));
}

}
